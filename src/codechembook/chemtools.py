################################################################################# ChemSymbols - a function containing the unicode strings for special characters# that are common in chemistry################################################################################def chemSymbols(key, printall=False):    """    Function interface to a database of common chemistry symbols.        Required Args:        key (string): which symbol to return (see below for )            Optional Args:        printall (boolean): test function to print all key : symbol pairs            Returns:        (string): the symbol(s) requested by key        Available keys are:    'Angstrom', 'cm-1', 'degree', 'Delta', 'mu', 'nu',     'rxn_arrow_right', 'rxn_arrow_left', 'equil_arrow', 'resonance_arrow'    '_0', '_1', '_2', '_3', '_4', '_5', '_6', '_7', '_8', '_9',     '_+', '_-', '_(', '_)', '_n', '_x', '_i',    '^0', '^1', '^2', '^3', '^4', '^5', '^6', '^7', '^8', '^9',     '^+', '^-', '^(', '^)', '^n', '^x'    """        # Define our dictionary    symbol_dictionary = {        'Angstrom': '\u212B',        'cm-1': 'cm\u207B\u00B9',        'degree': '\u00B0',        'Delta': '\u0394', # capital delta        'mu': '\u03BC', # lower case mu        'nu': '\u03BD', # lower case nu        'rxn_arrow_right': '\u2192',        'rxn_arrow_left': '\u2190',        'equil_arrow': '\u21CC',        'resonance_arrow': '\u2194',        '_0': '\u2080', # subscript 0        '_1': '\u2081', # subscript 1        '_2': '\u2082', # subscript 2        '_3': '\u2083', # subscript 3        '_4': '\u2084', # subscript 4        '_5': '\u2085', # subscript 5        '_6': '\u2086', # subscript 6        '_7': '\u2087', # subscript 7        '_8': '\u2088', # subscript 8        '_9': '\u2089', # subscript 9        '_+': '\u208A', # subscript +        '_-': '\u208B', # subscript -        '_(': '\u208D', # subscript (        '_)': '\u208E', # subscript )        '_n': '\u2099', # subscript n        '_x': '\u2093', # subscript x        '_i': '\u1D62', # subscript i        '^0': '\u2070', # superscript 0        '^1': '\u00B9', # superscript 1        '^2': '\u00B2', # superscript 2        '^3': '\u00B3', # superscript 3        '^4': '\u2074', # superscript 4        '^5': '\u2075', # superscript 5        '^6': '\u2076', # superscript 6        '^7': '\u2077', # superscript 7        '^8': '\u2078', # superscript 8        '^9': '\u2079', # superscript 9        '^+': '\u207A', # superscript +        '^-': '\u207B', # superscript â€“        '^(': '\u207D', # superscript (        '^)': '\u207E', # superscript )        '^n': '\u207F', # superscript n        '^x': '\u02E3' # superscript x        }        # Since the dictionary is hidden from the user, give a way to see the keys    if printall:        for test_key in symbol_dictionary.keys():            print(test_key + ' : ' + symbol_dictionary[test_key])    # Output the result if the user has chosen a proper key    if key in symbol_dictionary.keys():        return symbol_dictionary[key]    else:        if printall == False:            print(key + ' is not a known symbol.')